[{"id":0,"href":"/rpackages/","title":"R Packages","parent":"Welcome to AtmosChem","content":""},{"id":1,"href":"/rpackages/vein/","title":"vein","parent":"R Packages","content":" build:    cran:      doi:  github:  \n  Vehicular Emissions INventories (VEIN)    What is new?     Added OpenMP AGAIN and also, imported dotCall64 to avoid copying New VEIN project: sebr_cb05co2 covers SP, MG, RJ with CB05+CO2 for 2019 and amazon2014. NH3 in ef_cetesb updated VOC speciation for Brazil  New in VEIN?    No worries! Just install R, Rstudio and then\nSystem requirements    vein imports functions from spatial packages listed below. In order to install these packages, firstly the user must install the requirements mentioned here.\nInstallation    VEIN can be installed via CRAN or github\ninstall.packages(\u0026#34;vein\u0026#34;) gitlab (faster than github)\nremotes::install_gitlab(\u0026#34;ibarraespinosa/vein\u0026#34;) github\nremotes::install_github(\u0026#34;atmoschem/vein\u0026#34;) 1. get a project (easier)    At the moment, most of the projects covers Brazilian regions, but I will include China, Europe or USA approaches as soon as I can.\nUse the function get_project and read the documentation.\n         library(vein) ?get_project get_project(directory = \u0026#34;awesome_city\u0026#34;) The structure of the new directory “awesome_city” is:\nawesome_city ├── config │ ├── clean.R │ ├── config.R │ ├── inventory.xlsx │ └── packages.R ├── main.R ├── main.Rproj ├── network │ ├── net.gpkg │ └── net.rds ├── scripts │ ├── evaporatives.R │ ├── exhaust.R │ ├── fuel_eval.R │ ├── net.R │ ├── pavedroads.R │ ├── plots.R │ ├── post.R │ ├── traffic.R │ └── wrf.R └── wrf └── wrfinput_d02 You have to open the file main.Rproj with Rstudio and then open and run main.R\nTo run main.R you will need these extra packages:\n ggplot2 readxl eixport (If you plan to generate WRF Chem emissions file)  If you do not have them already, you can install:\ninstall.packages(c(\u0026#34;ggplot2\u0026#34;, \u0026#34;readxl\u0026#34;, \u0026#34;eixport\u0026#34;)) Too complicated? Watch a YouTube     English\n Portuguese\n"},{"id":2,"href":"/rpackages/eixport/","title":"eixport","parent":"R Packages","content":"        \nExporting emissions to atmospheric models, eixport: 0.5.0    Emissions are mass that affects atmosphere in complex ways, not only physical, but also, in the health of humans, ecosystems, economically, etc.\nThere are several models whose inputs are emissions, such as R-Line or WRF-Chem. This R-Package provide functions to read emissions from VEIN and from other models in different formats and export the emissions into the appropriate format suitable to other models.\nInstall    To install the CRAN version:\ninstall.packages(\u0026#34;eixport\u0026#34;) To install the development version:\ndevtools::install_github(\u0026#34;atmoschem/eixport\u0026#34;) Some functions:     get_edgar: Download EDGAR emissions data. to_rline: Export emissions to other formats to_wrf: Combine total/spatial/temporal/split and write emission to file to_brams_spm: inputs for SPM BRAMS wrf_profile: Create spatial profile for WRF-Chem wrf_create: Create emission files to the WRF-Chem wrf_plot: simple but useful plot wrf_get: Read variables wrf_put: Write variables to_as4wrf: Create WRF-Chem inputs using NCL scrip AS4WRF.ncl. to_munich: To generate inputs for MUNICH model.  Download EDGAR 5    get_edgar(dataset = \u0026#34;v50_AP\u0026#34;, destpath = tempdir(), sector = \u0026#34;TOTALS\u0026#34;, year = 2014) check this video\nSummary    library(eixport) file = paste0(system.file(\u0026#34;extdata\u0026#34;, package = \u0026#34;eixport\u0026#34;),\u0026#34;/wrfinput_d02\u0026#34;) wrf_summary(file = file) #\u0026gt; | | | 0% | |======================= | 33% | |=============================================== | 67% | |======================================================================| 100% #\u0026gt; Min. 1st Qu. Median Mean 3rd Qu. #\u0026gt; Times 1.312168e+09 1.312168e+09 1.312168e+09 1.312168e+09 1.312168e+09 #\u0026gt; XLAT -2.438538e+01 -2.405025e+01 -2.370471e+01 -2.370379e+01 -2.335773e+01 #\u0026gt; XLONG -4.742899e+01 -4.696930e+01 -4.650305e+01 -4.650304e+01 -4.603427e+01 #\u0026gt; Max. sum #\u0026gt; Times 1.312168e+09 NA #\u0026gt; XLAT -2.301877e+01 -76160.28 #\u0026gt; XLONG -4.558643e+01 -149414.28 Attributes as data.frame    file = paste0(system.file(\u0026#34;extdata\u0026#34;, package = \u0026#34;eixport\u0026#34;),\u0026#34;/wrfinput_d02\u0026#34;) wrf_meta(file) #\u0026gt; $global #\u0026gt; att vars #\u0026gt; 1 TITLE OUTPUT FROM REAL_EM V3.9.1.1 PREPROCESSOR #\u0026gt; 2 START_DATE 2011-08-01_00:00:00 #\u0026gt; 3 SIMULATION_START_DATE 2011-08-01_00:00:00 #\u0026gt; 4 WEST-EAST_GRID_DIMENSION 64 #\u0026gt; 5 SOUTH-NORTH_GRID_DIMENSION 52 #\u0026gt; 6 BOTTOM-TOP_GRID_DIMENSION 35 #\u0026gt; 7 DX 3000 #\u0026gt; 8 DY 3000 #\u0026gt; 9 GRIDTYPE C #\u0026gt; 10 DIFF_OPT 1 #\u0026gt; 11 KM_OPT 4 #\u0026gt; 12 DAMP_OPT 3 #\u0026gt; 13 DAMPCOEF 0.200000002980232 #\u0026gt; 14 KHDIF 0 #\u0026gt; 15 KVDIF 0 #\u0026gt; 16 MP_PHYSICS 10 #\u0026gt; 17 RA_LW_PHYSICS 4 #\u0026gt; 18 RA_SW_PHYSICS 4 #\u0026gt; 19 SF_SFCLAY_PHYSICS 1 #\u0026gt; 20 SF_SURFACE_PHYSICS 2 #\u0026gt; 21 BL_PBL_PHYSICS 1 #\u0026gt; 22 CU_PHYSICS 0 #\u0026gt; 23 SF_LAKE_PHYSICS 0 #\u0026gt; 24 SURFACE_INPUT_SOURCE 1 #\u0026gt; 25 SST_UPDATE 0 #\u0026gt; 26 GRID_FDDA 0 #\u0026gt; 27 GFDDA_INTERVAL_M 0 #\u0026gt; 28 GFDDA_END_H 0 #\u0026gt; 29 GRID_SFDDA 0 #\u0026gt; 30 SGFDDA_INTERVAL_M 0 #\u0026gt; 31 SGFDDA_END_H 0 #\u0026gt; 32 HYPSOMETRIC_OPT 2 #\u0026gt; 33 USE_THETA_M 0 #\u0026gt; 34 USE_MAXW_LEVEL 0 #\u0026gt; 35 USE_TROP_LEVEL 0 #\u0026gt; 36 GWD_OPT 0 #\u0026gt; 37 SF_URBAN_PHYSICS 1 #\u0026gt; 38 SF_OCEAN_PHYSICS 0 #\u0026gt; 39 SIMULATION_INITIALIZATION_TYPE REAL-DATA CASE #\u0026gt; 40 WEST-EAST_PATCH_START_UNSTAG 1 #\u0026gt; 41 WEST-EAST_PATCH_END_UNSTAG 63 #\u0026gt; 42 WEST-EAST_PATCH_START_STAG 1 #\u0026gt; 43 WEST-EAST_PATCH_END_STAG 64 #\u0026gt; 44 SOUTH-NORTH_PATCH_START_UNSTAG 1 #\u0026gt; 45 SOUTH-NORTH_PATCH_END_UNSTAG 51 #\u0026gt; 46 SOUTH-NORTH_PATCH_START_STAG 1 #\u0026gt; 47 SOUTH-NORTH_PATCH_END_STAG 52 #\u0026gt; 48 BOTTOM-TOP_PATCH_START_UNSTAG 1 #\u0026gt; 49 BOTTOM-TOP_PATCH_END_UNSTAG 34 #\u0026gt; 50 BOTTOM-TOP_PATCH_START_STAG 1 #\u0026gt; 51 BOTTOM-TOP_PATCH_END_STAG 35 #\u0026gt; 52 GRID_ID 2 #\u0026gt; 53 PARENT_ID 1 #\u0026gt; 54 I_PARENT_START 48 #\u0026gt; 55 J_PARENT_START 40 #\u0026gt; 56 PARENT_GRID_RATIO 3 #\u0026gt; 57 DT 15 #\u0026gt; 58 CEN_LAT -23.7047119140625 #\u0026gt; 59 CEN_LON -46.5030517578125 #\u0026gt; 60 TRUELAT1 -23 #\u0026gt; 61 TRUELAT2 -24 #\u0026gt; 62 MOAD_CEN_LAT -23.5499954223633 #\u0026gt; 63 STAND_LON -45 #\u0026gt; 64 POLE_LAT 90 #\u0026gt; 65 POLE_LON 0 #\u0026gt; 66 GMT 0 #\u0026gt; 67 JULYR 2011 #\u0026gt; 68 JULDAY 213 #\u0026gt; 69 MAP_PROJ 1 #\u0026gt; 70 MAP_PROJ_CHAR Lambert Conformal #\u0026gt; 71 MMINLU MODIFIED_IGBP_MODIS_NOAH #\u0026gt; 72 NUM_LAND_CAT 21 #\u0026gt; 73 ISWATER 17 #\u0026gt; 74 ISLAKE 21 #\u0026gt; 75 ISICE 15 #\u0026gt; 76 ISURBAN 13 #\u0026gt; 77 ISOILWATER 14 #\u0026gt; 78 HYBRID_OPT -1 #\u0026gt; 79 ETAC 0 #\u0026gt;  #\u0026gt; $vars #\u0026gt; vars MemoryOrder description units stagger FieldType #\u0026gt; 1 XLAT XY LATITUDE, SOUTH IS NEGATIVE degree north 104 #\u0026gt; 2 XLONG XY LONGITUDE, WEST IS NEGATIVE degree east 104 Paper accepted on Journal of Open Source Software    https://doi.org/10.21105/joss.00607\n@article{eixport, title = {eixport: An R package to export emissions to atmospheric models}, journal = {The Journal of Open Source Software}, author = {Sergio Ibarra-Espinosa and Daniel Schuch and Edmilson {Dias de Freitas}}, year = {2018}, doi = {10.21105/joss.00607}, url = {http://joss.theoj.org/papers/10.21105/joss.00607}, }  Contributing    Please, read this guide. Contributions of all sorts are welcome, issues and pull requests are the preferred ways of sharing them. When contributing pull requests, please follow the Google’s R Style Guide. This project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms.\n"},{"id":3,"href":"/rpackages/emissv/","title":"emissv","parent":"R Packages","content":"       \nThis package provides tools to create emissions (with a focus on vehicular emissions) for use in numeric air quality models such as WRF-Chem.\nInstallation    System dependencies    EmissV import functions from ncdf4 for reading model information, raster and sf to process grinded/geographic information and units. These packages need some aditional libraries:\nTo Ubuntu    The following steps are required for installation on Ubuntu:\nsudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable --yes sudo apt-get --yes --force-yes update -qq # netcdf dependencies: sudo apt-get install --yes libnetcdf-dev netcdf-bin # units/udunits2 dependency: sudo apt-get install --yes libudunits2-dev # sf dependencies (without libudunits2-dev): sudo apt-get install --yes libgdal-dev libgeos-dev libproj-dev To Fedora    The following steps are required for installation on Fedora:\nsudo dnf update # netcdf dependencies: sudo yum install netcdf-devel # units/udunits2 dependency: sudo yum install udunits2-devel # sf dependencies (without libudunits2-dev): sudo yum install gdal-devel proj-devel proj-epsg proj-nad geos-devel To Windows    No additional steps for windows installation.\nDetailed instructions can be found at netcdf, libudunits2-dev and sf developers page.\nTo conda (miniconda / anaconda)    First create a new environment called rspatial (or a better name):\nconda create -n rspatial -y conda activate rspatial and to install some requisites:\nconda install -c conda-forge r-sf -y conda install -c conda-forge r-rgdal -y conda install -c conda-forge r-lwgeom -y Package installation    To install the CRAN version (0.665.5.2):\ninstall.packages(\u0026#34;EmissV\u0026#34;) To install the development version (0.665.5.3) using remotes:\nrequire(\u0026#34;remotes\u0026#34;) remotes::install_github(\u0026#34;atmoschem/EmissV\u0026#34;) or to install the development version (0.665.5.3) using devtools:\nrequire(\u0026#34;devtools\u0026#34;) devtools::install_github(\u0026#34;atmoschem/EmissV\u0026#34;) Using EmissV with EDGAR 5.0 emissions    EmissV can be used to process emissions of atmospheric pollutants and green house gases from inventories such as EDGAR, RCP, GAINS and other datasets in NetCDF format, the GEIA-ACCENT and ECCAD emission data portal makes available some of these inventories. You can verify the supported format with:\nEmissV::read() To generate a simple emission it\u0026rsquo;s a straightforward process in 4 steps:\nlibrary(EmissV) ### 1. download the EDGAR Netcdf using the function get_edgar from the eixport R-package  ### or from the http://jeodpp.jrc.ec.europa.eu/ftp/jrc-opendata/EDGAR/datasets/v50_AP/  ### EDGAR 5.0 website and unzip inside a temporary directory # create the temporary directory to download the data dir.create(file.path(tempdir(), \u0026#34;EDGAR\u0026#34;)) # download the total emissions of NOx from EDGAR v50_AP for 2015 eixport::get_edgar(dataset = \u0026#34;v50_AP\u0026#34;, pol = \u0026#39;NOx\u0026#39;, sector = \u0026#34;TOTALS\u0026#34;, year = 2015, type = \u0026#39;nc\u0026#39;, ask = FALSE, copyright = FALSE, destpath = file.path(tempdir(), \u0026#34;EDGAR\u0026#34;)) # unzip the file unzip(zipfile = paste0(file.path(tempdir(), \u0026#34;EDGAR\u0026#34;),\u0026#39;/v50_NOx_2015.0.1x0.1.zip\u0026#39;), exdir = paste0(file.path(tempdir(), \u0026#34;EDGAR\u0026#34;))) ### 2. read the emissions (using the spec argument to split NOx into NO and NO2) NOx \u0026lt;- read(paste0(file.path(tempdir(), \u0026#34;EDGAR\u0026#34;),\u0026#39;/v50_NOx_2015.0.1x0.1.nc\u0026#39;), version = \u0026#39;EDGAR\u0026#39;, spec = c(E_NO = 0.9 , # optional, 90% of NOx used to NO E_NO2 = 0.1 )) # optional, 10% of NOx uset to NO2 ### 3. get the information from a WRF grid from a initial conditions file (wrfinput) g \u0026lt;- gridInfo(paste(system.file(\u0026#34;extdata\u0026#34;, package = \u0026#34;EmissV\u0026#34;),\u0026#34;/wrfinput_d01\u0026#34;,sep=\u0026#34;\u0026#34;)) ### 4. calculate the emissions for grid g NO \u0026lt;- emission(grid = g, inventory = NOx$E_NO, pol = \u0026#34;NO\u0026#34;, mm = 30.01, plot = T) NO2 \u0026lt;- emission(grid = g, inventory = NOx$E_NO2,pol = \u0026#34;NO2\u0026#34;,mm = 46.0055, plot = T) The next step is to save the emission in a emission file, the next example show how to save emissions using the eixport R-package:\nlibrary(eixport) ### create a temporary folder for emissions dir.create(file.path(tempdir(), \u0026#34;EMISSION\u0026#34;)) ### create the emision file wrf_create(wrfinput_dir = system.file(\u0026#34;extdata\u0026#34;, package = \u0026#34;EmissV\u0026#34;), wrfchemi_dir = file.path(tempdir(), \u0026#34;EMISSION\u0026#34;), domains = 1) ### get the file path of the emission file emis_file \u0026lt;- list.files(path = file.path(tempdir(), \u0026#34;EMISSION\u0026#34;), pattern = \u0026#34;wrfchemi_d01\u0026#34;, full.names = TRUE) ### save the emission wrf_put(NO, file = emis_file, name = \u0026#34;E_NO\u0026#34;, verbose = TRUE) wrf_put(NO2, file = emis_file, name = \u0026#34;E_NO2\u0026#34;, verbose = TRUE) Check the wrf_create, wrf_put and to_wrf to more information and customize for your application.\nNOTE: The emission file must be compatible with the WRF-Chem options (many arguments are the same as the namelist.input from WRF) check the eixport R-Package documentation and the WRF-Chem manual for more information.\nOther R-packages are available to write netcdf such as ncdf4, RNetCDF, tidync are available on CRAN. Other languages such as NCL leanguage and the Python package wrf-python, and preprocessor anthro_emiss are aternative to write NetCDF files.\nUsing EmissV to estimate vehicular emissions    In EmissV the vehicular emissions are estimated by a top-down approach, i.e. the emissions are calculated using the statistical description of the fleet at avaliable level (National, Estadual, City, etc).The following steps show an example workflow for calculating vehicular emissions, these emissions are initially temporally and spatially disaggregated, and then distributed spatially and temporally.\nI. Total: emission of pollutants is estimated from the fleet, use and emission factors and for the interest area (cities, states, countries, etc).\nlibrary(EmissV) fleet \u0026lt;- vehicles(example = T) # using a example of vehicles (DETRAN 2016 data and SP vahicle distribution): # Category Type Fuel Use SP ... # Light Duty Vehicles Gasohol LDV_E25 LDV E25 41 km/d 11624342 ... # Light Duty Vehicles Ethanol LDV_E100 LDV E100 41 km/d 874627 ... # Light Duty Vehicles Flex LDV_F LDV FLEX 41 km/d 9845022 ... # Diesel Trucks TRUCKS_B5 TRUCKS B5 110 km/d 710634 ... # Diesel Urban Busses CBUS_B5 BUS B5 165 km/d 792630 ... # Diesel Intercity Busses MBUS_B5 BUS B5 165 km/d 21865 ... # Gasohol Motorcycles MOTO_E25 MOTO E25 140 km/d 3227921 ... # Flex Motorcycles MOTO_F MOTO FLEX 140 km/d 235056 ... fleet \u0026lt;- fleet[,c(-6,-8,-9)] # dropping RJ, PR and SC EF \u0026lt;- emissionFactor(example = T) # using a example emission factor (values calculated from CETESB 2015): # CO PM # Light duty Vehicles Gasohol 1.75 g/km 0.0013 g/km # Light Duty Vehicles Ethanol 10.04 g/km 0.0000 g/km # Light Duty Vehicles Flex 0.39 g/km 0.0010 g/km # Diesel trucks 0.45 g/km 0.0612 g/km # Diesel urban busses 0.77 g/km 0.1052 g/km # Diesel intercity busses 1.48 g/km 0.1693 g/km # Gasohol motorcycles 1.61 g/km 0.0000 g/km # Flex motorcycles 0.75 g/km 0.0000 g/km TOTAL \u0026lt;- totalEmission(fleet,EF,pol = c(\u0026#34;CO\u0026#34;),verbose = T) # Total of CO : 1128297.0993334 t year-1 II. Spatial distribution: The package has functions to read information from tables, georeferenced images (tiff), shapefiles (sh), OpenStreet maps (osm), global inventories in NetCDF format (nc) to calculate point, line and area sources.\nraster \u0026lt;- raster::raster(paste(system.file(\u0026#34;extdata\u0026#34;, package = \u0026#34;EmissV\u0026#34;), \u0026#34;/dmsp.tiff\u0026#34;,sep=\u0026#34;\u0026#34;)) grid \u0026lt;- gridInfo(paste(system.file(\u0026#34;extdata\u0026#34;, package = \u0026#34;EmissV\u0026#34;), \u0026#34;/wrfinput_d02\u0026#34;,sep=\u0026#34;\u0026#34;)) # Grid information from: .../EmissV/extdata/wrfinput_d02 shape \u0026lt;- raster::shapefile(paste(system.file(\u0026#34;extdata\u0026#34;, package = \u0026#34;EmissV\u0026#34;), \u0026#34;/BR.shp\u0026#34;,sep=\u0026#34;\u0026#34;),verbose = F)[12,1] Minas_Gerais \u0026lt;- areaSource(shape,raster,grid,name = \u0026#34;Minas Gerais\u0026#34;) # processing Minas Gerais area ... # fraction of Minas Gerais area inside the domain = 0.0145921494236101 shape \u0026lt;- raster::shapefile(paste(system.file(\u0026#34;extdata\u0026#34;, package = \u0026#34;EmissV\u0026#34;), \u0026#34;/BR.shp\u0026#34;,sep=\u0026#34;\u0026#34;),verbose = F)[22,1] Sao_Paulo \u0026lt;- areaSource(shape,raster,grid,name = \u0026#34;Sao Paulo\u0026#34;) # processing Sao Paulo area ... # fraction of Sao Paulo area inside the domain = 0.474658563750987 sp::spplot(raster::merge(drop_units(TOTAL$CO[[1]]) * Sao_Paulo, drop_units(TOTAL$CO[[2]]) * Minas_Gerais), scales = list(draw=TRUE),ylab=\u0026#34;Lat\u0026#34;,xlab=\u0026#34;Lon\u0026#34;, main=list(label=\u0026#34;Emissions of CO [g/d]\u0026#34;), col.regions = c(\u0026#34;#031638\u0026#34;,\u0026#34;#001E48\u0026#34;,\u0026#34;#002756\u0026#34;,\u0026#34;#003062\u0026#34;, \u0026#34;#003A6E\u0026#34;,\u0026#34;#004579\u0026#34;,\u0026#34;#005084\u0026#34;,\u0026#34;#005C8E\u0026#34;, \u0026#34;#006897\u0026#34;,\u0026#34;#0074A1\u0026#34;,\u0026#34;#0081AA\u0026#34;,\u0026#34;#008FB3\u0026#34;, \u0026#34;#009EBD\u0026#34;,\u0026#34;#00AFC8\u0026#34;,\u0026#34;#00C2D6\u0026#34;,\u0026#34;#00E3F0\u0026#34;)) III. Emission calculation: calculate the final emission from all different sources and converts to model units and resolution.\nCO_emissions \u0026lt;- emission(TOTAL,\u0026#34;CO\u0026#34;,list(SP = Sao_Paulo, MG = Minas_Gerais),grid,mm=28, plot = T) # calculating emissions for CO using molar mass = 28 ... IV. Temporal distribution: the package has a set of hourly profiles that represent the mean activity for each day of the week calculated from traffic counts of toll stations located in São Paulo city.\ndata(perfil) names(perfil) The package has additional functions for read netcdf data, create line and point sources (with plume rise) and to estimate the total emissions of of volatile organic compounds from exhaust (through the exhaust pipe), liquid (carter and evaporative) and vapor (fuel transfer operations).\nFunctions:\n read: read global inventories in netcdf format vehicles: tool to set-up vehicle data.table emissionFactor: tool to set-up emission factors data.table gridInfo: read grid information from a NetCDF file pointSource: emissions from point sources plumeRise: calculate plume rise rasterSource: distribution of emissions by a georeferenced image lineSource: distribution of emissions by line vectors streetDist: distribution by OpenStreetnMap street (in progress) areaSource: distribution of emissions by region totalEmission: total emissions emission: Emissions to atmospheric models speciation: Speciation of emissions in different compounds  Sample datasets:\n Species: species mapping tables Perfil: vehicle counting profile for vehicular activity Sample of an image of persistent lights of the Defense Meteorological Satellite Program (DMSP) CETESB 2015 emission factors as emissionFactor(example=T) DETRAN 2016 data and SP vahicle distribution as vehicles(example=T) Shapefiles for Brazil states  Contributing    Bug reports, suggestions, and code contributions are all welcome. Please see CONTRIBUTING.md for details. Note that this project adopt the Contributor Code of Conduct and by participating in this project you agree to abide by its terms.\nLicense    EmissV is published under the terms of the MIT License. Copyright (c) 2018 Daniel Schuch.\n"},{"id":4,"href":"/rpackages/wrftools/","title":"wrftools","parent":"R Packages","content":"This package does 3 things\n help you to define domains extract data as points of spatial features and bricks returns st_bbox from wrf files  I’m not an expert in WRF but i need to use it. One of the very frustating and tricky part was to make a correct namelist.wps. Hours and hours trying to get the perfect domains. This functions solves this part while providing a dynamic maps for actually viewing where are your domains.\nInstall    remotes::install_github(\u0026#34;atmoschem/wrftools\u0026#34;) wrf_domains (better for low latitude regions)    wrf_domains returns a list of:\n the map the sf object  The arguments of wrf_domains are the same arguments of namelist.wps. It include default values but you can change them accordingly.\nlibrary(wrftools) a \u0026lt;- wrf_domains() a[[1]] # leaflet xtractor    (inspired in NCL from DCA/IAG/USP)\nWhich returns data.frame ready for ggplot2. The class of Time is POSIXct\ndata(cetesb) cetesb \u0026lt;- cetesb[!is.na(cetesb$Station), \u0026#34;Station\u0026#34;] #use your wrfout wrf \u0026lt;- \u0026#34;wrfoA.nc\u0026#34; t2 = c(\u0026#34;T2\u0026#34;, \u0026#34;o3\u0026#34;, \u0026#34;no\u0026#34;, \u0026#34;no2\u0026#34;, \u0026#34;PM10\u0026#34;, \u0026#34;PM2_5_DRY\u0026#34;) df \u0026lt;- xtractor(atmos = wrf, vars = t2, points = cetesb, stations = cetesb$Station) and raster bricks\nlibrary(cptcity) r \u0026lt;- xtractor(atmos = wrf, vars = t2, points = cetesb[1, ], return_list = T) # A list with raster and data.frame sp::spplot(r[[1]][[2]], \u0026#34;layer.60\u0026#34;, scales = list(draw = T), col.regions = cpt(1224)) Contributing    If you see any errors and know how to improve the function, or add new functions write an issue and a pull request, please. I will be ver grateful, for sure, 100%.\n"},{"id":5,"href":"/rpackages/respeciate/","title":"respeciate","parent":"R Packages","content":"\nrespeciate give you access to the US/EPA Speciate v5.1 profiles\nThe installation is:\nremotes::install_github(\u0026#34;atmoschem/respeciate\u0026#34;) example    find PROFILE_CODE\nlibrary(respeciate) x \u0026lt;- find_code(\u0026#34;Ethanol\u0026#34;) x$PROFILE_CODE #\u0026gt; [1] \u0026#34;8733\u0026#34; \u0026#34;8736\u0026#34; \u0026#34;8757\u0026#34; \u0026#34;8758\u0026#34; \u0026#34;8760\u0026#34; \u0026#34;8761\u0026#34; \u0026#34;8763\u0026#34; \u0026#34;8764\u0026#34; \u0026#34;8765\u0026#34; \u0026#34;8766\u0026#34; #\u0026gt; [11] \u0026#34;8767\u0026#34; \u0026#34;8768\u0026#34; \u0026#34;8769\u0026#34; \u0026#34;8770\u0026#34; \u0026#34;8771\u0026#34; \u0026#34;8772\u0026#34; \u0026#34;8773\u0026#34; \u0026#34;8827\u0026#34; \u0026#34;8828\u0026#34; \u0026#34;8829\u0026#34; #\u0026gt; [21] \u0026#34;8830\u0026#34; \u0026#34;8831\u0026#34; \u0026#34;8832\u0026#34; \u0026#34;8833\u0026#34; \u0026#34;8834\u0026#34; \u0026#34;8835\u0026#34; \u0026#34;8836\u0026#34; \u0026#34;8837\u0026#34; \u0026#34;8838\u0026#34; \u0026#34;8839\u0026#34; #\u0026gt; [31] \u0026#34;8840\u0026#34; \u0026#34;8841\u0026#34; \u0026#34;8842\u0026#34; \u0026#34;8843\u0026#34; \u0026#34;8844\u0026#34; \u0026#34;8845\u0026#34; \u0026#34;8846\u0026#34; \u0026#34;8847\u0026#34; \u0026#34;8848\u0026#34; \u0026#34;8849\u0026#34; #\u0026gt; [41] \u0026#34;8850\u0026#34; \u0026#34;8851\u0026#34; \u0026#34;8852\u0026#34; \u0026#34;8853\u0026#34; \u0026#34;8854\u0026#34; \u0026#34;8855\u0026#34; \u0026#34;8863\u0026#34; \u0026#34;8864\u0026#34; \u0026#34;8865\u0026#34; \u0026#34;8866\u0026#34; #\u0026gt; [51] \u0026#34;8867\u0026#34; \u0026#34;8868\u0026#34; \u0026#34;8869\u0026#34; \u0026#34;8870\u0026#34; \u0026#34;8871\u0026#34; \u0026#34;8872\u0026#34; \u0026#34;8884\u0026#34; \u0026#34;8885\u0026#34; \u0026#34;8886\u0026#34; \u0026#34;8887\u0026#34; #\u0026gt; [61] \u0026#34;8888\u0026#34; \u0026#34;8889\u0026#34; \u0026#34;8934\u0026#34; speciate    PROFILE_CODE = \u0026#34;8855\u0026#34; dt \u0026lt;- spec(PROFILE_CODE) #\u0026gt; Sum WEIGHT_PERCENT: 100 head(dt, 2) #\u0026gt; REF_Code PROFILE_CODE SPECIES_ID #\u0026gt; 1 EPA2013 8855 30 #\u0026gt; 2 EPA2013 8855 44 #\u0026gt; PROFILE_NAME #\u0026gt; 1 Gasoline Exhaust - Tier 2 light-duty vehicles using 85% Ethanol - Composite Profile #\u0026gt; 2 Gasoline Exhaust - Tier 2 light-duty vehicles using 85% Ethanol - Composite Profile #\u0026gt; PROFILE_TYPE MASTER_POLLUTANT QSCORE QSCORE_DESC QUALITY CONTROLS #\u0026gt; 1 GAS TOG NA B Not Available #\u0026gt; 2 GAS TOG NA B Not Available #\u0026gt; PROFILE_DATE #\u0026gt; 1 10/15/10 00:00:00 #\u0026gt; 2 10/15/10 00:00:00 #\u0026gt; PROFILE_NOTES #\u0026gt; 1 Composite profile from four Tier 2 FFVs on one E85 fuel, LA92 test cycle. #\u0026gt; 2 Composite profile from four Tier 2 FFVs on one E85 fuel, LA92 test cycle. #\u0026gt; TOTAL #\u0026gt; 1 100 #\u0026gt; 2 100 #\u0026gt; TEST_METHOD #\u0026gt; 1 The test cycle consists of a cold start Phase 1 (first 310 seconds), a stabilized Phase 2 (311-1427 second), a 600-second engine off soak, and a warm start Phase 3 (repeat of Phase 1 of the LA92). Sampling for VOC included collection of whole air samples in canisters for analysis of speciated hydrocarbons (benzene, toluene, ethylbenzene, m-\u0026amp; p-,o-xylene, i.e. BTEX, styrene, n-hexane, naphthalene,1,3-butadiene, MTBE), and DNPH-coated Sep Pak cartridges sampling for carbonyl compounds (formaldehyde, acetaldehyde, acrolein). #\u0026gt; 2 The test cycle consists of a cold start Phase 1 (first 310 seconds), a stabilized Phase 2 (311-1427 second), a 600-second engine off soak, and a warm start Phase 3 (repeat of Phase 1 of the LA92). Sampling for VOC included collection of whole air samples in canisters for analysis of speciated hydrocarbons (benzene, toluene, ethylbenzene, m-\u0026amp; p-,o-xylene, i.e. BTEX, styrene, n-hexane, naphthalene,1,3-butadiene, MTBE), and DNPH-coated Sep Pak cartridges sampling for carbonyl compounds (formaldehyde, acetaldehyde, acrolein). #\u0026gt; NORMALIZATION_BASIS ORIGINAL_COMPOSITE STANDARD INCLUDES_INORGANIC GAS #\u0026gt; 1 TOG C 1 0 #\u0026gt; 2 TOG C 1 0 #\u0026gt; TEST_YEAR JUDGEMENT_RATING VINTAGE_RATING DATA_QUANTITY_RATING #\u0026gt; 1 2010 5 5 3 #\u0026gt; 2 2010 5 5 3 #\u0026gt; REGION SAMPLES LOWER_SIZE UPPER_SIZE SIBLING VERSION TOG_to_VOC #\u0026gt; 1 San Antonio, TX 0 0 4.3 1.78241 #\u0026gt; 2 San Antonio, TX 0 0 4.3 1.78241 #\u0026gt; TEMP_SAMPLE_C RH_SAMPLE PARTICLE_LOADING_ug_per_m3 ORGANIC_LOADING_ug_per_m3 #\u0026gt; 1 NA NA NA NA #\u0026gt; 2 NA NA NA NA #\u0026gt; CATEGORY_LEVEL_1_Generation_Mechanism CATEGORY_LEVEL_2_Sector_Equipment #\u0026gt; 1 Combustion Mobile; Onroad #\u0026gt; 2 Combustion Mobile; Onroad #\u0026gt; CATEGORY_LEVEL_3_ Fuel_Product MASTER_POLLUTANT_EMISSION_RATE #\u0026gt; 1 Gasoline; Ethanol NA #\u0026gt; 2 Gasoline; Ethanol NA #\u0026gt; MASTER_POLL_EMISSION_RATE_UNIT ORGANIC_MATTER_to_ORGANIC_CARBON_RATIO #\u0026gt; 1 NA #\u0026gt; 2 NA #\u0026gt; MASS_OVERAGE_PERCENT CREATED BY CREATED Date MODIFIED BY MODIFIED DATE #\u0026gt; 1 NA  #\u0026gt; 2 NA  #\u0026gt; REVIEWED BY REVIEWED DATE Data_Origin #\u0026gt; 1 EPA #\u0026gt; 2 EPA #\u0026gt; Keywords DOC_LINK Q_LINK #\u0026gt; 1 Gasoline Exhaust; Tier 2 light-duty vehicle; 85% Ethanol  #\u0026gt; 2 Gasoline Exhaust; Tier 2 light-duty vehicle; 85% Ethanol  #\u0026gt; WEIGHT_PERCENT INCLUDE_IN_SUM UNCERTAINTY_PERCENT UNCERTAINTY_METHOD #\u0026gt; 1 0.01330965 Yes -99 N/A #\u0026gt; 2 0.06784069 Yes -99 N/A #\u0026gt; ANALYTICAL_METHOD PHASE SPECIES_EMISSION_RATE SPECIES_EMISSION_RATE_UNIT #\u0026gt; 1 GC-FID GAS NA  #\u0026gt; 2 GC-FID GAS NA  #\u0026gt; CAS CAS no hyphen ALT_CAS SAROAD PAMS HAPS SPECIES_NAME #\u0026gt; 1 95-63-6 95636 95636 1 0 1,2,4-trimethylbenzene #\u0026gt; 2 108-67-8 108678 108678 45207 1 0 1,3,5-trimethylbenzene #\u0026gt; SPEC_MW NonVOCTOG NOTE SRS ID DSSTox_ID Molecular Formula #\u0026gt; 1 120.1916 0 16261 DTXSID6021402 C9H12 #\u0026gt; 2 120.1916 0 25262 DTXSID6026797 C9H12 #\u0026gt; OXYGEN_to_CARBON_RATIO Smiles Notation VP_Pascal_EPI VP_Pascal_UM #\u0026gt; 1 NA CC1=CC(=C(C=C1)C)C 215.9823 479.1445 #\u0026gt; 2 NA CC1=CC(=CC(=C1)C)C 267.9780 479.1445 #\u0026gt; VP_Pascal_OPERA Duplicate_ID SYMBOL #\u0026gt; 1 250.3854 BZ124M #\u0026gt; 2 525.0247 BZ135M #\u0026gt; REFERENCE #\u0026gt; 1 2013. \u0026#39;EPAct/V2/E-89: Assessing the Effect of Five Gasoline Properties on Exhaust Emissions from Light-Duty Vehicles Certified to Tier 2 Standards Final Report on Program Design and Data Collection\u0026#39;, US EPA, US DOE and CRC. EPA-420-R-13-004. https://nepis.epa.gov/Exe/ZyPDF.cgi?Dockey=P100GA80.txt #\u0026gt; 2 2013. \u0026#39;EPAct/V2/E-89: Assessing the Effect of Five Gasoline Properties on Exhaust Emissions from Light-Duty Vehicles Certified to Tier 2 Standards Final Report on Program Design and Data Collection\u0026#39;, US EPA, US DOE and CRC. EPA-420-R-13-004. https://nepis.epa.gov/Exe/ZyPDF.cgi?Dockey=P100GA80.txt #\u0026gt; REF_DESCRIPTION #\u0026gt; 1 This program is Phase 3 of EPAct/V2/E-89, a joint testsing effort by EPA, DOE through NREL, and CRC. It evaluates the effects of fuel property changes on exhaust emissions from Tier 2 light-duty gasoline vehicles (LDGVs) running on the following ethanol fuel blends: 0%, 10%, 15%, 20% and 85% ethanol-blended gasoline #\u0026gt; 2 This program is Phase 3 of EPAct/V2/E-89, a joint testsing effort by EPA, DOE through NREL, and CRC. It evaluates the effects of fuel property changes on exhaust emissions from Tier 2 light-duty gasoline vehicles (LDGVs) running on the following ethanol fuel blends: 0%, 10%, 15%, 20% and 85% ethanol-blended gasoline #\u0026gt; LINK #\u0026gt; 1 #https://nepis.epa.gov/Exe/ZyPDF.cgi?Dockey=P100GA80.txt# #\u0026gt; 2 #https://nepis.epa.gov/Exe/ZyPDF.cgi?Dockey=P100GA80.txt# plot    library(ggplot2) ggplot(dt[, c(\u0026#34;WEIGHT_PERCENT\u0026#34;, \u0026#34;SPECIES_NAME\u0026#34;)], aes(x = SPECIES_NAME, y = WEIGHT_PERCENT)) + geom_bar(stat = \u0026#34;identity\u0026#34;) + coord_flip() "},{"id":6,"href":"/workshops/vein5/","title":"VEIN5, 5 years of VEIN","parent":"Workshops","content":"VEIN 5 YEARS OLD!    We celebrate 5 years of VEIN.\nThe first release\nThe first release of VEIN was on October 19, 2016 under a brief period named of REMI. This means that is 5 years this month. So, the Tuesday 19 of October 2019, at 16:00 Brsilia time, We will have a oresentation VEIN5 to celebrate 5 years of VEIN. We will have presentation from researchers from Al over Brazil, Ecuador and more. I will prepare a presentation showing the evolution of VEIN and will invite all that want to show some results using VEIN. 5 minutes of presentation. The idea is to share something fun.\nSo grab a red wine, some cake and get ready!\n "},{"id":7,"href":"/rpackages/koffing/","title":"koffing","parent":"R Packages","content":"The goal of koffing is to assemble R functions to catch (scrape) air pollution data. koffing is from the same creator of the blog Rpollution. Newer versions of this scraper can be found here.\nInstallation    You can install koffing from github with:\n# install.packages(\u0026#34;devtools\u0026#34;) devtools::install_github(\u0026#34;atmoschem/koffing\u0026#34;) CETESB scraper    To scrape data from the CETESB qualar system, use the function scraper_cetesb().\nlibrary(koffing) koffing::scraper_cetesb( parameter = 99, station = 17, start = \u0026#34;01/01/2018\u0026#34;, end = \u0026#34;31/01/2018\u0026#34;, login = \u0026#34;login\u0026#34;, password = \u0026#34;password\u0026#34; ) If you substitute the values login and password by your login and password from the Qualar system, this example will return the hourly NO concentrations from the Pinheiros station for January 2018.\n"},{"id":8,"href":"/workshops/pems/","title":"PEMS","parent":"Workshops","content":"PEMS, RSD and Emission Models    This workshop, on May 27 20:00 UTC, will gather cutting edge research on this topic. To participate, click on:\n YouTube Facebook  \n1st PEMS, RSD and Emission Models Workshop (PREM)    May 27. 2021, 20:00-22:00 UTC (17:00 Brazil time)     20:00 Introduction: Dr. Sergio Ibarra-Espinosa 20:03 Vehicular emissions and air quality. Dr. Edmilson Dias de Freitas 20:15 Linking vehicle emission measurements to useful emission models. Dr. Robin Smit 20:30 Vehicle Emissions Remote Sensing using EDAR. Dr. Karl Ropkins 20:45 PEMS measurements. Dr. Mauricio Osses Alvarado 21:00 An international bottom-up inventory of public transport emissions​. Dr. Rafael H. M. Pereira, Dr. Joao Pedro Bazzo Vieiraand Dr. Pedro Andrade 21:15 NOx emission modelling. Dr. Zamir Mera - Docente FICA 21:30 Evaluation of TDI Engine Nitrogen Oxide Emissions in Chile Measured with PEMS. Kevin Basoa Barraza and Sebastian Tolvett 21:45 PEMS development. MSc.André Forcetto 22:00 Final Wrap-up  URL https://www.youtube.com/channel/UCyOuqiSs2OLLkC1bt7lV2Yg/live https://www.facebook.com/cienciasatmosfericas/live/\n   Invited Bio      André Forcetto Andre Forcetto has a master’s degree in Environment, Health and Sustainability from Universidade de São Paulo and he’s a doctoral student in Atmospheric Sciences at IAG-USP, focused on the development of a low-cost PEMS. Andre works in the Environmental Company of Sao Paulo State/Brazil (CETESB) since 1991, in the vehicles’ homologation department and collaborates in the development of technical normatives for pollution control from vehicles.    Edmilson Dias de Freitas Dr. Edmilson Freitas is a Full Professor at the Department of Atmospheric Sciences of IAG-USP, São Paulo, Brazil, focusing on Applied Meteorology and Numerical Modeling of the Atmosphere. His research covers issues related to urban regions and their interactions with the surrounding areas and associated atmospheric circulations, and the results of it on air quality, including the application of model results to public policy establishment and actions of civil protection. He is currently the coordinator of the Working Group on Brazilian Fuels, Vehicle Technologies and Emissions Program (PCVE), together with the Brazilian Association of Automotive Engineering (AEA).    João Bazzo João Bazzo has a master\u0026rsquo;s degree in Environmental Engineering from Federal University of Paraná and he is currently working as a Research Assistant at the Institute for Applied Economic Research (IPEA). João is interested in vehicle emissions in the urban environment and its relationship with the improvement of public and active transportation and reducing inequalities in access to opportunities.    Karl Ropkins Dr Karl Ropkins a Senior Research Fellow in Transport Studies, Faculty of Environment, University of Leeds in the UK and private consultant. Karl’s interests focus on the development, deployment and use of environmental measurement systems. His most recent work collaborations on the EU H2020 project ‘City Air Remote Emissions Sensing (CARES)’ (https://cares-project.eu/) and the TRANSITION Clean Air Network (https://transition-air.org.uk/).    Kevin Basoa Barraza Kevin Basoa is a Mechanical Engineer and is finishing a master in atmospheric science in Chile. He has worked on different research projects that range from measuring emissions to modeling them in the atmosphere.    Mauricio Osses Dr. Mauricio Osses is Delegate director and Prof. at Universidad Santa Maria. He possesses a PhD in vehicular emissions from Leeds University and his research covers vehicular emissions measurement, energy and transport.    Pedro Andrade Pedro Andrade is a Technologist at the National Institute for Space Research (INPE). He has a Doctorate degree in Applied Computing (INPE), and his research interests are Geoinformatics, Environmental Modeling, and Social Simulation. He leads the technological development of the platforms TerraME (terrame.org) and AdaptaBrasil (adaptabrasil.mcti.gov.br ), and has contributed to several open-source projects.    Rafael H. M. Pereira. Rafael obtained his PhD in Geography from the Transport Studies Unit (TSU) at Oxford University. He is currently the head of data science at the Department of Urban, Regional and Environmental studies at Ipea, the Institute for Applied Economic Research in the Brazilian Federal government. His research focuses on the role of urban and transport policies in the spatial organization of cities and access to opportunities, as well as their distributional impacts on social and health inequalities.    Robin Smit Dr Robin Smit is a Director at Transport Energy/Emission Research (TER) and an Adjunct Associate Professor with the University of Technology Sydney, Australia. Robin is passionate about transport and environment and has over 25 years work experience in emission measurement/modelling and impact assessment (air pollution, greenhouse gas emissions) in Europe, Australia, New Zealand and the Middle East    Sebstian Tolvett Sebastián Tolvett (M.Sc.) has more than 15 years of experience working in the field of transport emissions. His career began at the International Center for Sustainable Systems Research in California, through the Center he collaborated on more than 15 emissions projects in Brazil, China, Chile, Colombia, Guatemala, Mexico, Turkey and the United States.Since 2015, he has held an academic position at the Universidad Tecnológica Metropolitana, Chile, where he established the mobile source emissions research area in the department of mechanical engineering. Currently, he works as an assistant researcher at the CMT-Motores Institute of the Polytechnic University of Valencia, Spain, where he deepens his knowledge of European engine calibration and emission control    Sergio Ibarra-Espinosa Sergio Ibarra-Espinosa is doctor in Atmospheric Sciences Universidade de São Paulo, postdoc in vehicular emissions at the Universidade de São Paulo and also Chinese Academy of Sciences, Master in Environmental Planning and BS Risks prevention and environment. Sergio has been studying vehicular emissions during 13 years using models and data-science. During PhD developed the open-source model Vehicular Emission Inventory model (VEIN) to compile fuel-calibrated emissions estimates and the model EIXPORT to generate NetCDF emissions files ready to use with air quality models such as WRF Chem, MUNICH, and EURAD-IM, with several chemical mechanisms.    Zamir Mera Zamir Mera is Assistant Professor at Universidad Técnica del Norte, Ecuador. He has a PhD in Mechanical Engineering from University Institute for Automobile Research (INSIA) at Universidad Politécnica de Madrid. His research interests cover vehicle emissions, energy and environment, and transportation.     "},{"id":9,"href":"/workshops/","title":"Workshops","parent":"Welcome to AtmosChem","content":""},{"id":10,"href":"/rpackages/emep/","title":"emep","parent":"R Packages","content":"EMEP EEA Emission factors data-base    Access to the EMEP EEA emission factors tier 2. https://www.eea.europa.eu/publications/emep-eea-guidebook-2019\nInstallation    library(remotes) install_gitlab(\u0026#34;ibarraespinosa/emep\u0026#34;) Functions     ef find_ef  ef() find_ef(\u0026#34;electricity\u0026#34;) NFR Sector Table Type Technology Fuel Abatement Region Pollutant Value Unit 2 1.A.1.a Public electricity and heat production Table_3-20 Tier 2 emission factor Stationary reciprocating Engines - gas-fired Natural gas \u0026lt;NA\u0026gt; Cr 0.05 mg/GJ 11 1.A.1.a Public electricity and heat production Table_3-20 Tier 2 emission factor Stationary reciprocating Engines - gas-fired Natural gas \u0026lt;NA\u0026gt; TSP 2 g/GJ CI_lower CI_upper Reference 2 0.01 0.25 Nielsen et al., 2010 11 1.00 3.00 BUWAL, 2001 "},{"id":11,"href":"/rpackages/cpt/","title":"cptcity","parent":"R Packages","content":"       \nA package to return colour gradients from CPTCITY    Colour palettes comes from http://soliton.vm.bytemark.co.uk/pub/cpt-city/index.html\nCurrently there are 7140 colour gradients. To se the names type cpt_names.\nThere are three functions:\n find_cpt: To search the name of the colour gradient.  Example:\nlibrary(cptcity) find_cpt(\u0026#34;radar\u0026#34;) ## [1] \u0026quot;idv_radar_dbz_nws\u0026quot; \u0026quot;idv_radar_dbz\u0026quot; \u0026quot;idv_radar_reflect_24\u0026quot; ## [4] \u0026quot;idv_radar_topo_mdr\u0026quot; \u0026quot;ncl_radar_1\u0026quot; \u0026quot;ncl_radar\u0026quot;  find_cpt(\u0026#34;rain\u0026#34;) ## [1] \u0026quot;colo_alpen_sky_rain_brolly\u0026quot; ## [2] \u0026quot;colo_lightningmccarl_taste_the_rainbow\u0026quot; ## [3] \u0026quot;ds9_rainbow\u0026quot; ## [4] \u0026quot;gist_rainbow\u0026quot; ## [5] \u0026quot;gmt_GMT_rainbow\u0026quot; ## [6] \u0026quot;grass_rainbow\u0026quot; ## [7] \u0026quot;grass_terrain\u0026quot; ## [8] \u0026quot;imagej_brain\u0026quot; ## [9] \u0026quot;jjg_ccolo_alpen_sky_rain_brolly\u0026quot; ## [10] \u0026quot;jjg_ccolo_lightningmccarl_taste_the_rainbow\u0026quot; ## [11] \u0026quot;jjg_misc_rainfall\u0026quot; ## [12] \u0026quot;jjg_neo10_elem_rain\u0026quot; ## [13] \u0026quot;jjg_neo10_othr_faint_rainbow\u0026quot; ## [14] \u0026quot;jjg_neo10_othr_pastel_rainbow\u0026quot; ## [15] \u0026quot;jjg_neo10_othr_rainbow_sunset\u0026quot; ## [16] \u0026quot;kst_13_rainbow\u0026quot; ## [17] \u0026quot;kst_34_rainbow\u0026quot; ## [18] \u0026quot;kst_38_rainbow18\u0026quot; ## [19] \u0026quot;kst_39_rainbow_white\u0026quot; ## [20] \u0026quot;kst_40_rainbow_black\u0026quot; ## [21] \u0026quot;ma_icecream_rainbowsherbet\u0026quot; ## [22] \u0026quot;neota_elem_rain\u0026quot; ## [23] \u0026quot;neota_othr_faint_rainbow\u0026quot; ## [24] \u0026quot;neota_othr_pastel_rainbow\u0026quot; ## [25] \u0026quot;neota_othr_rainbow_sunset\u0026quot; ## [26] \u0026quot;oc_rainbow\u0026quot; ## [27] \u0026quot;ocal_spectrum_rainbow_medium\u0026quot; ## [28] \u0026quot;ocal_spectrums_rainbow_002\u0026quot; ## [29] \u0026quot;ocal_spectrums_rainbow\u0026quot; ## [30] \u0026quot;pd_skies_rainbow\u0026quot; ## [31] \u0026quot;pj_1_a_rainbow\u0026quot; ## [32] \u0026quot;pj_1_black_rainbow\u0026quot; ## [33] \u0026quot;pj_2_palest_rainbow\u0026quot; ## [34] \u0026quot;pj_2_white_rainbow\u0026quot; ## [35] \u0026quot;pj_2_wisteria_rain\u0026quot; ## [36] \u0026quot;pj_4_deeprainbow\u0026quot; ## [37] \u0026quot;pj_5_anotherrainbow\u0026quot; ## [38] \u0026quot;pj_5_harryrainbow\u0026quot; ## [39] \u0026quot;pj_5_mysticrainbow\u0026quot; ## [40] \u0026quot;pj_5_rainbowrich\u0026quot; ## [41] \u0026quot;pj_classic_paler_rainbow\u0026quot; ## [42] \u0026quot;rc_rainbow\u0026quot; ## [43] \u0026quot;ukmo_main_rain_mmh\u0026quot; ## [44] \u0026quot;ukmo_wow_rain_mmh\u0026quot;  cpt: To return the colour gradient.  cptcity::cpt(pal = \u0026#34;ncl_radar_1\u0026#34;, n = 100) ## [1] \u0026quot;#B2F8FF\u0026quot; \u0026quot;#B2F8FF\u0026quot; \u0026quot;#B2F8FF\u0026quot; \u0026quot;#B2DCFF\u0026quot; \u0026quot;#B2BEFF\u0026quot; \u0026quot;#B2B8FF\u0026quot; \u0026quot;#B2B8FF\u0026quot; ## [8] \u0026quot;#A088EE\u0026quot; \u0026quot;#8742D7\u0026quot; \u0026quot;#7D25CD\u0026quot; \u0026quot;#7D25CD\u0026quot; \u0026quot;#7322BE\u0026quot; \u0026quot;#601D9E\u0026quot; \u0026quot;#541A8B\u0026quot; ## [15] \u0026quot;#541A8B\u0026quot; \u0026quot;#66328A\u0026quot; \u0026quot;#AF9387\u0026quot; \u0026quot;#EDE685\u0026quot; \u0026quot;#EDE685\u0026quot; \u0026quot;#ECE584\u0026quot; \u0026quot;#DDD67C\u0026quot; ## [22] \u0026quot;#CDC673\u0026quot; \u0026quot;#CDC673\u0026quot; \u0026quot;#CDC673\u0026quot; \u0026quot;#B7B380\u0026quot; \u0026quot;#9D9C91\u0026quot; \u0026quot;#969696\u0026quot; \u0026quot;#969696\u0026quot; ## [29] \u0026quot;#B4B4B4\u0026quot; \u0026quot;#E6E6E6\u0026quot; \u0026quot;#FFFFFF\u0026quot; \u0026quot;#FFFFFF\u0026quot; \u0026quot;#EEFFFF\u0026quot; \u0026quot;#C6FFFF\u0026quot; \u0026quot;#AAFFFF\u0026quot; ## [36] \u0026quot;#AAFFFF\u0026quot; \u0026quot;#A2F6FF\u0026quot; \u0026quot;#79C9FF\u0026quot; \u0026quot;#55A0FF\u0026quot; \u0026quot;#55A0FF\u0026quot; \u0026quot;#55A0FF\u0026quot; \u0026quot;#3A55FF\u0026quot; ## [43] \u0026quot;#2009FF\u0026quot; \u0026quot;#1D00FF\u0026quot; \u0026quot;#1D00FF\u0026quot; \u0026quot;#4053C3\u0026quot; \u0026quot;#6EBF75\u0026quot; \u0026quot;#7EE55B\u0026quot; \u0026quot;#7EE55B\u0026quot; ## [50] \u0026quot;#71DE54\u0026quot; \u0026quot;#5AD249\u0026quot; \u0026quot;#4ECC43\u0026quot; \u0026quot;#4ECC43\u0026quot; \u0026quot;#48C741\u0026quot; \u0026quot;#39BB3C\u0026quot; \u0026quot;#2EB239\u0026quot; ## [57] \u0026quot;#2EB239\u0026quot; \u0026quot;#2DB039\u0026quot; \u0026quot;#25A43B\u0026quot; \u0026quot;#1E993D\u0026quot; \u0026quot;#1E993D\u0026quot; \u0026quot;#1E993D\u0026quot; \u0026quot;#7FC54E\u0026quot; ## [64] \u0026quot;#EAF562\u0026quot; \u0026quot;#FFFF66\u0026quot; \u0026quot;#FFFF66\u0026quot; \u0026quot;#FFED66\u0026quot; \u0026quot;#FFD566\u0026quot; \u0026quot;#FFCC66\u0026quot; \u0026quot;#FFCC66\u0026quot; ## [71] \u0026quot;#FFBC5F\u0026quot; \u0026quot;#FF9B53\u0026quot; \u0026quot;#FF884C\u0026quot; \u0026quot;#FF884C\u0026quot; \u0026quot;#FF7945\u0026quot; \u0026quot;#FF442D\u0026quot; \u0026quot;#FF1919\u0026quot; ## [78] \u0026quot;#FF1919\u0026quot; \u0026quot;#FD1A1A\u0026quot; \u0026quot;#E52B2B\u0026quot; \u0026quot;#CD3C3C\u0026quot; \u0026quot;#CC3D3D\u0026quot; \u0026quot;#CC3D3D\u0026quot; \u0026quot;#BC3838\u0026quot; ## [85] \u0026quot;#A93232\u0026quot; \u0026quot;#A53131\u0026quot; \u0026quot;#A53131\u0026quot; \u0026quot;#BA2269\u0026quot; \u0026quot;#DD0AC3\u0026quot; \u0026quot;#ED00ED\u0026quot; \u0026quot;#ED00ED\u0026quot; ## [92] \u0026quot;#D814E6\u0026quot; \u0026quot;#A945D7\u0026quot; \u0026quot;#8967CD\u0026quot; \u0026quot;#8967CD\u0026quot; \u0026quot;#9474CF\u0026quot; \u0026quot;#CAB5DB\u0026quot; \u0026quot;#FAF0E6\u0026quot; ## [99] \u0026quot;#FAF0E6\u0026quot; \u0026quot;#FAF0E6\u0026quot;  cptcity::cpt(pal = c(\u0026#34;mpl_viridis\u0026#34;, \u0026#34;mpl_inferno\u0026#34;), n = 100) ## [1] \u0026quot;#440154\u0026quot; \u0026quot;#46085C\u0026quot; \u0026quot;#471063\u0026quot; \u0026quot;#481769\u0026quot; \u0026quot;#481E6F\u0026quot; \u0026quot;#482475\u0026quot; \u0026quot;#472B7A\u0026quot; ## [8] \u0026quot;#46327E\u0026quot; \u0026quot;#443882\u0026quot; \u0026quot;#423E85\u0026quot; \u0026quot;#404487\u0026quot; \u0026quot;#3E4989\u0026quot; \u0026quot;#3C4F8A\u0026quot; \u0026quot;#39558C\u0026quot; ## [15] \u0026quot;#365B8D\u0026quot; \u0026quot;#34608D\u0026quot; \u0026quot;#31658E\u0026quot; \u0026quot;#2F6A8E\u0026quot; \u0026quot;#2D6F8E\u0026quot; \u0026quot;#2B748E\u0026quot; \u0026quot;#29798E\u0026quot; ## [22] \u0026quot;#277E8E\u0026quot; \u0026quot;#25828E\u0026quot; \u0026quot;#23878E\u0026quot; \u0026quot;#228C8D\u0026quot; \u0026quot;#20928C\u0026quot; \u0026quot;#1F968B\u0026quot; \u0026quot;#1E9B89\u0026quot; ## [29] \u0026quot;#1FA088\u0026quot; \u0026quot;#20A485\u0026quot; \u0026quot;#23A983\u0026quot; \u0026quot;#28AE7F\u0026quot; \u0026quot;#2EB37C\u0026quot; \u0026quot;#35B778\u0026quot; \u0026quot;#3DBC73\u0026quot; ## [36] \u0026quot;#47C06E\u0026quot; \u0026quot;#51C469\u0026quot; \u0026quot;#5BC863\u0026quot; \u0026quot;#67CC5B\u0026quot; \u0026quot;#73D055\u0026quot; \u0026quot;#7FD34D\u0026quot; \u0026quot;#8CD645\u0026quot; ## [43] \u0026quot;#9AD83C\u0026quot; \u0026quot;#A7DB34\u0026quot; \u0026quot;#B5DE2A\u0026quot; \u0026quot;#C2DF22\u0026quot; \u0026quot;#D0E11B\u0026quot; \u0026quot;#DEE318\u0026quot; \u0026quot;#EBE51A\u0026quot; ## [50] \u0026quot;#F7E620\u0026quot; \u0026quot;#010106\u0026quot; \u0026quot;#030210\u0026quot; \u0026quot;#07051B\u0026quot; \u0026quot;#0C0827\u0026quot; \u0026quot;#130A33\u0026quot; \u0026quot;#1A0C40\u0026quot; ## [57] \u0026quot;#230C4C\u0026quot; \u0026quot;#2B0B57\u0026quot; \u0026quot;#34095F\u0026quot; \u0026quot;#3D0965\u0026quot; \u0026quot;#460A69\u0026quot; \u0026quot;#4E0D6C\u0026quot; \u0026quot;#57106E\u0026quot; ## [64] \u0026quot;#5F136E\u0026quot; \u0026quot;#67166E\u0026quot; \u0026quot;#70196E\u0026quot; \u0026quot;#771C6D\u0026quot; \u0026quot;#7F1E6C\u0026quot; \u0026quot;#87216A\u0026quot; \u0026quot;#902568\u0026quot; ## [71] \u0026quot;#982765\u0026quot; \u0026quot;#A02A62\u0026quot; \u0026quot;#A82E5E\u0026quot; \u0026quot;#B0315A\u0026quot; \u0026quot;#B83556\u0026quot; \u0026quot;#C03A50\u0026quot; \u0026quot;#C73E4B\u0026quot; ## [78] \u0026quot;#CE4346\u0026quot; \u0026quot;#D44941\u0026quot; \u0026quot;#DA4F3B\u0026quot; \u0026quot;#E05535\u0026quot; \u0026quot;#E65D2E\u0026quot; \u0026quot;#EB6428\u0026quot; \u0026quot;#EF6C22\u0026quot; ## [85] \u0026quot;#F2751B\u0026quot; \u0026quot;#F57D14\u0026quot; \u0026quot;#F8860E\u0026quot; \u0026quot;#FA9007\u0026quot; \u0026quot;#FB9906\u0026quot; \u0026quot;#FCA309\u0026quot; \u0026quot;#FCAD11\u0026quot; ## [92] \u0026quot;#FBB71C\u0026quot; \u0026quot;#FAC127\u0026quot; \u0026quot;#F8CB35\u0026quot; \u0026quot;#F6D543\u0026quot; \u0026quot;#F4DF54\u0026quot; \u0026quot;#F2E967\u0026quot; \u0026quot;#F1F17B\u0026quot; ## [99] \u0026quot;#F4F891\u0026quot; \u0026quot;#FCFFA4\u0026quot;  lucky: To choose a random colour gradient  cptcity::lucky(n = 100) ## Colour gradient: wkp_country_wiki_washington, number: 7106 ## [1] \u0026quot;#71ABD8\u0026quot; \u0026quot;#71ABD8\u0026quot; \u0026quot;#71ABD8\u0026quot; \u0026quot;#71ABD8\u0026quot; \u0026quot;#73ADDA\u0026quot; \u0026quot;#76AFDC\u0026quot; \u0026quot;#79B2DE\u0026quot; ## [8] \u0026quot;#79B2DE\u0026quot; \u0026quot;#79B2DE\u0026quot; \u0026quot;#79B2DE\u0026quot; \u0026quot;#7FB7E2\u0026quot; \u0026quot;#86BBE6\u0026quot; \u0026quot;#8DC1EA\u0026quot; \u0026quot;#8DC1EA\u0026quot; ## [15] \u0026quot;#8DC1EA\u0026quot; \u0026quot;#8DC1EA\u0026quot; \u0026quot;#93C6EE\u0026quot; \u0026quot;#9ACCF2\u0026quot; \u0026quot;#A1D2F7\u0026quot; \u0026quot;#A1D2F7\u0026quot; \u0026quot;#A1D2F7\u0026quot; ## [22] \u0026quot;#A1D2F7\u0026quot; \u0026quot;#A9D7F9\u0026quot; \u0026quot;#B1DDFC\u0026quot; \u0026quot;#B9E3FF\u0026quot; \u0026quot;#B9E3FF\u0026quot; \u0026quot;#B9E3FF\u0026quot; \u0026quot;#B9E3FF\u0026quot; ## [29] \u0026quot;#C3E8FE\u0026quot; \u0026quot;#CDECFE\u0026quot; \u0026quot;#D8F2FE\u0026quot; \u0026quot;#D8F2FE\u0026quot; \u0026quot;#D8F2FE\u0026quot; \u0026quot;#D8F2FE\u0026quot; \u0026quot;#C9E6E0\u0026quot; ## [36] \u0026quot;#BADBC2\u0026quot; \u0026quot;#ACD0A5\u0026quot; \u0026quot;#ACD0A5\u0026quot; \u0026quot;#ACD0A5\u0026quot; \u0026quot;#ABCFA4\u0026quot; \u0026quot;#A3CA9C\u0026quot; \u0026quot;#9BC493\u0026quot; ## [43] \u0026quot;#94BF8B\u0026quot; \u0026quot;#94BF8B\u0026quot; \u0026quot;#94BF8B\u0026quot; \u0026quot;#94BF8B\u0026quot; \u0026quot;#A1C38E\u0026quot; \u0026quot;#AFC792\u0026quot; \u0026quot;#BDCC96\u0026quot; ## [50] \u0026quot;#BDCC96\u0026quot; \u0026quot;#BDCC96\u0026quot; \u0026quot;#BDCC96\u0026quot; \u0026quot;#C3CF9D\u0026quot; \u0026quot;#CAD3A4\u0026quot; \u0026quot;#D1D7AB\u0026quot; \u0026quot;#D1D7AB\u0026quot; ## [57] \u0026quot;#D1D7AB\u0026quot; \u0026quot;#D1D7AB\u0026quot; \u0026quot;#D6DBAE\u0026quot; \u0026quot;#DBDFB1\u0026quot; \u0026quot;#E1E4B5\u0026quot; \u0026quot;#E1E4B5\u0026quot; \u0026quot;#E1E4B5\u0026quot; ## [64] \u0026quot;#E1E3B4\u0026quot; \u0026quot;#E0DFAE\u0026quot; \u0026quot;#DFDAA9\u0026quot; \u0026quot;#DED6A3\u0026quot; \u0026quot;#DED6A3\u0026quot; \u0026quot;#DED6A3\u0026quot; \u0026quot;#DED6A3\u0026quot; ## [71] \u0026quot;#D7CC97\u0026quot; \u0026quot;#D0C28C\u0026quot; \u0026quot;#CAB982\u0026quot; \u0026quot;#CAB982\u0026quot; \u0026quot;#CAB982\u0026quot; \u0026quot;#C9B881\u0026quot; \u0026quot;#C7B27A\u0026quot; ## [78] \u0026quot;#C5AC72\u0026quot; \u0026quot;#C3A76B\u0026quot; \u0026quot;#C3A76B\u0026quot; \u0026quot;#C3A76B\u0026quot; \u0026quot;#C3A76B\u0026quot; \u0026quot;#BA9C62\u0026quot; \u0026quot;#B2915A\u0026quot; ## [85] \u0026quot;#AA8753\u0026quot; \u0026quot;#AA8753\u0026quot; \u0026quot;#AA8753\u0026quot; \u0026quot;#AA8753\u0026quot; \u0026quot;#AF946A\u0026quot; \u0026quot;#B4A182\u0026quot; \u0026quot;#BAAE9A\u0026quot; ## [92] \u0026quot;#BAAE9A\u0026quot; \u0026quot;#BAAE9A\u0026quot; \u0026quot;#BAAE9A\u0026quot; \u0026quot;#CDC5B7\u0026quot; \u0026quot;#E1DCD4\u0026quot; \u0026quot;#F5F4F2\u0026quot; \u0026quot;#F5F4F2\u0026quot; ## [99] \u0026quot;#F5F4F2\u0026quot; \u0026quot;#F5F4F2\u0026quot;  Install and use it!    # install.packages(\u0026#34;cptcity\u0026#34;) 1.0.0 # devtools::install_github(\u0026#34;ibarraespinosa/cptcity\u0026#34;) 1.0.2 library(cptcity) image(matrix(1:100), col = cpt(pal = \u0026#34;mpl_inferno\u0026#34;)) ggplot2    And you can use it ggplot2\nlibrary(cptcity) library(ggplot2) ggplot(faithfuld, aes(waiting, eruptions)) + geom_raster(aes(fill = density)) ggplot(faithfuld, aes(waiting, eruptions)) + geom_raster(aes(fill = density)) + scale_fill_gradientn(colours = cpt()) raster    or raster\nlibrary(cptcity) library(raster) f \u0026lt;- system.file(\u0026#34;external/test.grd\u0026#34;, package=\u0026#34;raster\u0026#34;) r \u0026lt;- raster(f) spplot(r, scales = list(draw = T)) spplot(r, scales = list(draw = T), col.regions = rev(cpt(n = 100, pal = \u0026#34;colo_Skyblue2u_Gentle_Waves\u0026#34;))) sf    or sf\nlibrary(cptcity) library(sf) f = st_read(system.file(\u0026#34;shapes/\u0026#34;, package=\u0026#34;maptools\u0026#34;), \u0026#34;sids\u0026#34;) st_crs(f) \u0026lt;- 4326 plot(f[\u0026#34;AREA\u0026#34;], pal = cpt(colorRampPalette = T)) mapview    or mapview\nlibrary(cptcity) library(mapview) library(sf) f = st_read(system.file(\u0026#34;shapes/\u0026#34;, package=\u0026#34;maptools\u0026#34;), \u0026#34;sids\u0026#34;, crs = 4326) mapview(f, zcol = \u0026#34;AREA\u0026#34;, col.regions = cpt(colorRampPalette = T), legend = T) stars    library(cptcity) library(stars) tif = system.file(\u0026#34;tif/L7_ETMs.tif\u0026#34;, package = \u0026#34;stars\u0026#34;) (x1 = read_stars(tif)) plot(x1, col = cptcity::cpt(819)) terra    library(cptcity) library(terra) f \u0026lt;- system.file(\u0026#34;exdata/test.tif\u0026#34;, package=\u0026#34;terra\u0026#34;) r \u0026lt;- rast(f) image(r, col = cptcity::lucky()) # Colour gradient: dca_alarm.p4.0.1, number: 1115  I included a random colour gradient function!    # install.packages(\u0026#34;cptcity\u0026#34;) # devtools::install_github(\u0026#34;ibarraespinosa/cptcity\u0026#34;) library(cptcity) image(matrix(1:100), col = lucky()) COPYING    Each palette has a COPYING.XML files available at ins/extdata. To see each file do:\nlibrary(cptcity) files \u0026lt;- list.files(system.file(\u0026#34;extdata\u0026#34;, package = \u0026#34;cptcity\u0026#34;), pattern = \u0026#34;.xml\u0026#34;, recursive = T, full.names = T) # For instance, the COPYING files of \u0026#34;arendal\u0026#34; is files[1] # and the file readLines(files[1]) 1] \u0026#34;/usr/local/lib/R/site-library/cptcity/extdata/arendal/COPYING.xml\u0026#34; [1] \u0026#34;\u0026lt;?xml version=\\\u0026#34;1.0\\\u0026#34;?\u0026gt;\u0026#34; [2] \u0026#34;\u0026lt;copying\u0026gt;\u0026#34; [3] \u0026#34; \u0026lt;authors\u0026gt;\u0026#34; [4] \u0026#34; \u0026lt;author href=\\\u0026#34;http://www.grida.no/graphicslib/\\\u0026#34;\u0026gt;\u0026#34; [5] \u0026#34; \u0026lt;name\u0026gt;GRID-Arendal\u0026lt;/name\u0026gt;\u0026#34; [6] \u0026#34; \u0026lt;/author\u0026gt;\u0026#34; [7] \u0026#34; \u0026lt;/authors\u0026gt;\u0026#34; [8] \u0026#34; \u0026lt;license\u0026gt;\u0026#34; [9] \u0026#34; \u0026lt;informal\u0026gt;\u0026#34; [10] \u0026#34; Attribution and linkback requested.\u0026#34; [11] \u0026#34; \u0026lt;/informal\u0026gt;\u0026#34; [12] \u0026#34; \u0026lt;year\u0026gt;2014\u0026lt;/year\u0026gt;\u0026#34; [13] \u0026#34; \u0026lt;text\u0026gt;\u0026#34; [14] \u0026#34; Using this graphic and referring to it is encouraged, \u0026#34; [15] \u0026#34; and please use it in presentations, web pages, newspapers, \u0026#34; [16] \u0026#34; blogs and reports.\u0026#34; [17] \u0026#34;\u0026#34; [18] \u0026#34; For any form of publication, please include the link to \u0026#34; [19] \u0026#34; this page and give the cartographer/designer credit.\u0026#34; [20] \u0026#34; \u0026lt;/text\u0026gt;\u0026#34; [21] \u0026#34; \u0026lt;/license\u0026gt;\u0026#34; [22] \u0026#34; \u0026lt;src\u0026gt;\u0026#34; [23] \u0026#34; \u0026lt;format\u0026gt;PNG images\u0026lt;/format\u0026gt;\u0026#34; [24] \u0026#34; \u0026lt;link href=\\\u0026#34;http://www.grida.no/graphicslib/detail/mean-surface-temperature_c7e4\\\u0026#34;\u0026#34; [25] \u0026#34;\\t \u0026gt;Temperature\u0026lt;/link\u0026gt;\u0026#34; [26] \u0026#34; \u0026lt;link href=\\\u0026#34;http://www.grida.no/graphicslib/detail/arctic-topography-and-bathymetry_5645\\\u0026#34;\u0026#34; [27] \u0026#34;\\t \u0026gt;Arctic bathymetry\u0026lt;/link\u0026gt;\u0026#34; [28] \u0026#34; \u0026lt;link href=\\\u0026#34;http://www.grida.no/graphicslib/detail/map-of-zimbabwe_36a5\\\u0026#34;\u0026#34; [29] \u0026#34;\\t \u0026gt;Zambezi\u0026lt;/link\u0026gt;\u0026#34; [30] \u0026#34; \u0026lt;/src\u0026gt;\u0026#34; [31] \u0026#34; \u0026lt;distribute\u0026gt;\u0026#34; [32] \u0026#34; \u0026lt;qgis distribute=\\\u0026#34;yes\\\u0026#34; license=\\\u0026#34;other\\\u0026#34;/\u0026gt;\u0026#34; [33] \u0026#34; \u0026lt;/distribute\u0026gt;\u0026#34; [34] \u0026#34;\u0026lt;/copying\u0026gt;\u0026#34; "},{"id":12,"href":"/rpackages/fem/","title":"fem","parent":"R Packages","content":"--  build:     github:  \n  Fixed Emissions Model (FEM)    A model to speciate emissions. In the future, it will include estimation methods, methods, classes and more.\nIt includes emissions from:\nKawashima, A. B., Martins, L. D., Abou Rafee, S. A., Rudke, A. P., #’ de Morais, M. V., \u0026amp; Martins, J. A. (2020). #’ Development of a spatialized atmospheric emission inventory for the main #’ industrial sources in Brazil. Environmental Science and Pollution Research, 1-11.\nInstallation    remotes::install_github(\u0026#34;atmoschem/fem\u0026#34;) Use    pm \u0026lt;- rnorm(n = 100, mean = 400, sd = 2) (df \u0026lt;- fem::spec_industry(pm, code = \u0026#34;01_petroleum\u0026#34;)) #\u0026gt; x species #\u0026gt; 1: 5.8170167 1-(1,1-dimethylethyl)-3,5-dimethylbenzene #\u0026gt; 2: 5.7659381 1-(1,1-dimethylethyl)-3,5-dimethylbenzene #\u0026gt; 3: 5.7898846 1-(1,1-dimethylethyl)-3,5-dimethylbenzene #\u0026gt; 4: 5.8304557 1-(1,1-dimethylethyl)-3,5-dimethylbenzene #\u0026gt; 5: 5.8368646 1-(1,1-dimethylethyl)-3,5-dimethylbenzene #\u0026gt; ---  #\u0026gt; 14496: 0.2073150 vinyl chloride #\u0026gt; 14497: 0.2063975 vinyl chloride #\u0026gt; 14498: 0.2068395 vinyl chloride #\u0026gt; 14499: 0.2065491 vinyl chloride #\u0026gt; 14500: 0.2069582 vinyl chloride Connection with vein\nFEM is designed to be used with VEIN and generate inputs for different chemical mechanisms\n"},{"id":13,"href":"/courses/","title":"Courses","parent":"Welcome to AtmosChem","content":""},{"id":14,"href":"/courses/vein-2020/","title":"VEIN 2020","parent":"Courses","content":"Curso sobre Vehicular Emissions Inventory (VEIN)    Em Fevereiro de 2020 foi feito um curso de VEIN no IAG, USP. Aqui a pagina web do curso https://ibarraespinosa.github.io/cursovein/\nAqui os videos:\n    "},{"id":15,"href":"/courses/vein-2021/","title":"VEIN 2021","parent":"Courses","content":"I will be giving a VEIN course on the Colombian air quality conference CASAP VIII\nThe information about the conference is here https://www.casap.com.co/en/pre-congress-courses/\nBut all the content of the course will be here https://ibarraespinosa.github.io/cursovein/\nMore information coming soon!\n"},{"id":16,"href":"/posts/","title":"News","parent":"Welcome to AtmosChem","content":""},{"id":17,"href":"/posts/curso01/","title":"VEIN course con CASAP VIII Conference","parent":"News","content":"I will be giving a VEIN course the Colombian Conference on Air quality: Air Quality and Public Heath – CASAP VIII\nhttps://www.casap.com.co/en/home/\nhttps://www.casap.com.co/en/pre-congress-courses/\nAll the couse will be here https://ibarraespinosa.github.io/cursovein/\n"},{"id":18,"href":"/_includes/","title":"Includes","parent":"Welcome to AtmosChem","content":""},{"id":19,"href":"/_includes/include-page/","title":"Include Page","parent":"Includes","content":"Example page include\nExample Shortcode\nShortcode used in an include page.     Head 1 Head 2 Head 3     1 2 3    "},{"id":20,"href":"/collapse/level-1/","title":"Level 1","parent":"Collapse","content":"Level 1\n   Level 1.1     Level 1.2     "},{"id":21,"href":"/collapse/level-2/","title":"Level 2","parent":"Collapse","content":"Level-2\n"},{"id":22,"href":"/posts/talk01/","title":"Talk01","parent":"News","content":"i\u0026mdash; title: \u0026ldquo;Talk about VEIN on Universidad Nacional Tecnologica de Lima Sur, Peru\u0026rdquo; date: 2021-06-30T13:20:29-03:00    I will be giving a talk about the VEIN model and its latests features on the Talk about VEIN on Universidad Nacional Tecnologica de Lima Sur, Peru. The talk will be online on July 6, 2021 at 12:00 Peruvian time.\n"},{"id":23,"href":"/toc-tree/level-1/","title":"Level 1","parent":"ToC Tree","content":"Level 1\n   Level 1.1     Level 1.2     Level 1.3     Level 1.3.1       "},{"id":24,"href":"/toc-tree/level-2/","title":"Level 2","parent":"ToC Tree","content":"Level-2\n"},{"id":25,"href":"/categories/","title":"Categories","parent":"Welcome to AtmosChem","content":""},{"id":26,"href":"/collapse/","title":"Collapse","parent":"Welcome to AtmosChem","content":"Demo collapsible menu entries.\n"},{"id":27,"href":"/collapse/level-1/level-1-1/","title":"Level 1.1","parent":"Level 1","content":"Level 1.1\n"},{"id":28,"href":"/toc-tree/level-1/level-1-1/","title":"Level 1.1","parent":"Level 1","content":"Level 1.1\n"},{"id":29,"href":"/collapse/level-1/level-1-2/","title":"Level 1.2","parent":"Level 1","content":"Level 1.2\n"},{"id":30,"href":"/toc-tree/level-1/level-1-2/","title":"Level 1.2","parent":"Level 1","content":"Level 1.2\n"},{"id":31,"href":"/toc-tree/level-1/level-1-3/","title":"Level 1.3","parent":"Level 1","content":"Level 1.3\n   Level 1.3.1     "},{"id":32,"href":"/toc-tree/level-1/level-1-3/level-1-3-1/","title":"Level 1.3.1","parent":"Level 1.3","content":"Level 1.3.1\n"},{"id":33,"href":"/collapse/level-2/level-2-1/","title":"Level 2.1","parent":"Level 2","content":"Level 2.1\n"},{"id":34,"href":"/toc-tree/level-2/level-2-1/","title":"Level 2.1","parent":"Level 2","content":"Level 2.1\n"},{"id":35,"href":"/collapse/level-2/level-2-2/","title":"Level 2.2","parent":"Level 2","content":"Level 2.2\n"},{"id":36,"href":"/toc-tree/level-2/level-2-2/","title":"Level 2.2","parent":"Level 2","content":"Level 2.2\n"},{"id":37,"href":"/tags/","title":"Tags","parent":"Welcome to AtmosChem","content":""},{"id":38,"href":"/toc-tree/","title":"ToC Tree","parent":"Welcome to AtmosChem","content":"This is just a demo section for the toc-treeshortcode.\n   Level 1     Level 1.1     Level 1.2     Level 1.3     Level 1.3.1         Level 2     Level 2.1     Level 2.2       "},{"id":39,"href":"/","title":"Welcome to AtmosChem","parent":"","content":"Atmoschem is a GitHub organization to group R packages and other resources to deal with air pollution. For instance, we have some R packages like vein, emissv, eixport and many more. See our R packages on the left. We also organize seminars about once per year and offer some free course of VEIN.\n"}]